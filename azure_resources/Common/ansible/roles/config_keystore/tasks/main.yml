---
# tasks file for config_keystore
- name: Convert pem certificate to crt format
  ansible.builtin.command: mv "{{ item }}".pem "{{ item }}".crt
  loop:
    - /etc/nginx/ssl/root
    - /etc/nginx/ssl/intermediate
  register: certs_converted
  changed_when: false

- name: Copy the script to the remote server
  ansible.builtin.template:
    src: templates/set-java-path-script.sh.j2
    dest: /tmp/java_path.sh
    mode: '644'

- name: Grant permission for bash script
  ansible.builtin.command:
    chdir: "/tmp"
    cmd: chmod +x java_path.sh
  register: script_permission
  changed_when: script_permission.rc != 0

- name: Run the script on the remote server
  ansible.builtin.command:
    chdir: "/tmp"
    cmd: ./java_path.sh
  register: java_home_result
  changed_when: java_home_result.rc != 0

- name: Print the value of an environment variable
  ansible.builtin.set_fact:
    java_home: "{{ java_home_result.stdout_lines | first }}"
  when: not (ansible_check_mode or ansible_diff_mode)

- name: Delete existing alias root
  ansible.builtin.command:
    cmd: >
      keytool -delete -alias root
      -keystore {{ java_home }}/{{ config_keystore_path }}
      -storepass {{ config_keystore_password }}
  changed_when: false
  ignore_errors: true
  register: ignore_errors_register
  when: not (ansible_check_mode or ansible_diff_mode)

- name: Delete existing alias intermediate
  ansible.builtin.command:
    cmd: >
      keytool -delete -alias intermediate
      -keystore {{ java_home }}/{{ config_keystore_path }}
      -storepass {{ config_keystore_password }}
  changed_when: false
  ignore_errors: true
  register: ignore_errors_register
  when: not (ansible_check_mode or ansible_diff_mode)

- name: Import root certificate to Java keystore
  ansible.builtin.expect:
    command: >
      keytool -import -trustcacerts -alias root
      -file /etc/nginx/ssl/root.crt
      -keystore {{ java_home }}/{{ config_keystore_path }}
      -storepass {{ config_keystore_password }}
    responses:
      - ".*Trust this certificate.*": "yes"
  register: root_result
  changed_when: root_result is defined and root_result.rc != 0
  when: not (ansible_check_mode or ansible_diff_mode)

- name: Import intermediate certificate to Java keystore
  ansible.builtin.expect:
    command: >
      keytool -import -trustcacerts -alias intermediate
      -file /etc/nginx/ssl/intermediate.crt
      -keystore {{ java_home }}/{{ config_keystore_path }}
      -storepass {{ config_keystore_password }}
    responses:
      - ".*Trust this certificate.*": "yes"
  register: intermediate_result
  changed_when: intermediate_result.rc != 0
  when: not (ansible_check_mode or ansible_diff_mode)
  notify:
    - Restart toolchains service
    - Restart Nginx

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
