---
- name: Create folders if it doesn't exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - /etc/nginx/conf.d
    - /etc/nginx/ssl

- name: Config Nginx Server with SSL
  when: config_nginx_with_ssl is defined
  block:
    - name: Copy SSL certificate files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/nginx/ssl/
        owner: root
        mode: "0755"
      when: not (ansible_check_mode or ansible_diff_mode)
      loop:
        - "{{ root_cert }}"
        - "{{ intermediate_cert }}"
        - "{{ certificate_public_key_file }}"
        - "{{ certificate_private_key_file }}"

    - name: List files in the specified folder
      ansible.builtin.find:
        paths: /etc/nginx/ssl
        recurse: false
      register: folder_files

    - name: Display the list of files
      ansible.builtin.debug:
        var: folder_files.files

    - name: Allow incoming traffic on port 443
      ansible.posix.firewalld:
        port: 443/tcp
        permanent: true
        state: enabled
      notify:
        - Reload firewalld

    - name: Add service configure to Nginx
      ansible.builtin.template:
        src: templates/conf_template_ssl.conf
        dest: /etc/nginx/conf.d/{{ config_nginx_server_name }}.conf
        owner: root
        mode: "0755"
      notify:
        - Validate Nginx configuration
        - Restart Nginx

- name: Config Nginx Server without SSL
  when: config_nginx_with_ssl is undefined or config_nginx_with_ssl is false
  block:
    - name: Add service configure to Nginx
      ansible.builtin.template:
        src: templates/conf_template.conf
        dest: /etc/nginx/conf.d/{{ config_nginx_server_name }}
        owner: root
        mode: "0755"
      notify:
        - Validate Nginx configuration
        - Restart Nginx

- name: Change SELINUX to permissive
  ansible.builtin.shell: |
    setenforce 0
    sed -i 's/SELINUX=enforcing/SELINUX=permissive/' /etc/selinux/config
  register: return_code
  changed_when: return_code != 1
