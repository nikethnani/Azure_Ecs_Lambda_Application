trigger: none

stages:
- stage: ansible_validation
  displayName: "Ansible Validation"
  pool: "linux-build-agents-dev"
  jobs:
  - job: ansible_check
    displayName: "Ansible Validation"
    variables:
      playbook_dir: ''
      inventory_dir: ''
      environment: 'dev'
    steps:

      - task: Bash@3
        displayName: 'Setting Variables'
        inputs:
          targetType: "inline"
          script: |
              if [[ "$(System.PullRequest.SourceBranch)" == *"jenkins"* ]]; then
                echo "Branch is for jenkins"
                echo "##vso[task.setvariable variable=playbook_dir]toolchain/jenkins/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]toolchain/jenkins/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"gitlab"* ]]; then
                echo "Branch is for gitlab"
                echo "##vso[task.setvariable variable=playbook_dir]toolchain/gitlab/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]toolchain/gitlab/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"polarion"* ]]; then
                echo "Branch is for polarion"
                echo "##vso[task.setvariable variable=playbook_dir]toolchain/polarion/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]toolchain/polarion/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"confluence"* ]]; then
                echo "Branch is for confluence"
                echo "##vso[task.setvariable variable=playbook_dir]toolchain/confluence/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]toolchain/confluence/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"vectorcast"* ]]; then
                echo "Branch is for vectorcast"
                echo "##vso[task.setvariable variable=playbook_dir]toolchain/vectorcast/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]toolchain/vectorcast/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"jfrog"* ]]; then
                echo "Branch is for jfrog"
                echo "##vso[task.setvariable variable=playbook_dir]toolchain/jfrog/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]toolchain/jfrog/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"coverity"* ]]; then
                echo "Branch is for coverity"
                echo "##vso[task.setvariable variable=playbook_dir]toolchain/coverity/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]toolchain/coverity/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"serverLicense"* ]]; then
                echo "Branch is for serverLicense"
                echo "##vso[task.setvariable variable=playbook_dir]toolchain/serverLicense/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]toolchain/serverLicense/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"jira"* ]]; then
                echo "Branch is for jira"
                echo "##vso[task.setvariable variable=playbook_dir]toolchain/jira/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]toolchain/jira/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"build-agent"* ]]; then
                echo "Branch is for build-agent"
                echo "##vso[task.setvariable variable=playbook_dir]build_agents/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]build_agents/ansible/inventory"
              elif [[ "$(System.PullRequest.SourceBranch)" == *"common"* ]]; then
                echo "Branch is for common"
                echo "##vso[task.setvariable variable=playbook_dir]common/ansible"
                echo "##vso[task.setvariable variable=inventory_dir]common/ansible/inventory"
              else
                echo "##[error]No tool detected, check branch naming."
                exit 1
              fi

      - task: DownloadSecureFile@1
        name: sshKey
        displayName: 'Download Private SSH key'
        inputs:
          secureFile: vm-id_rsa

      - task: Bash@3
        displayName: "ansible-lint"
        inputs:
          targetType: 'inline'
          script: 'ansible-lint --offline -q -p $(playbook_dir)/'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          failOnStderr: true

      - ${{ if containsValue(variables.playbook_dir, 'common/ansible') }}:
        - task: Ansible@0
          displayName: "ansible-playbook --check --diff"
          inputs:
            ansibleInterface: 'agentMachine'
            playbookPathOnAgentMachine: '$(System.DefaultWorkingDirectory)/$(playbook_dir)/playbook.yml'
            inventoriesAgentMachine: 'file'
            inventoryFileOnAgentMachine: '$(System.DefaultWorkingDirectory)/$(playbook_dir)/inventory/$(environment)/inventory.yaml'
            args: '--check --diff'
